generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  passwordResetTokens     PasswordResetToken[]
  emailVerificationTokens EmailVerification[]
  projects Project[]
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model EmailVerification {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
  totalInvestment         Float   @map("total_investment") 
  tir                     Float? 
  van                     Float? 
  payback                 Float? 
  projectedRevenue        Float   @map("projected_revenue") 
  minimumInvestmentAmount Float   @map("minimum_investment_amount") 
  executiveSummary        String? @map("executive_summary") 
  images ProjectImage[]
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model ProjectImage {
  id        Int      @id @default(autoincrement())
  url       String
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}
